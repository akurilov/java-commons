description = "Common functionality Java library"

buildscript {
	repositories {
		mavenCentral()
	}
}

allprojects {
	apply plugin: "java"
	apply plugin: "maven"
	apply plugin: "signing"
	group = "com.github.akurilov"
	version = "2.1.1"
}

ext {
	provided3rdPartyClasses = [
		"it/unimi/dsi/fastutil/bytes/ByteIterator.class",
		"it/unimi/dsi/fastutil/Stack.class",
		"it/unimi/dsi/fastutil/Arrays.class",
		"it/unimi/dsi/fastutil/Swapper.class",
		"it/unimi/dsi/fastutil/Hash.class",
		"it/unimi/dsi/fastutil/Function.class",
		"it/unimi/dsi/fastutil/HashCommon.class",
		"it/unimi/dsi/fastutil/objects/AbstractObjectCollection.class",
		"it/unimi/dsi/fastutil/objects/ObjectSet.class",
		"it/unimi/dsi/fastutil/objects/ObjectBidirectionalIterator.class",
		"it/unimi/dsi/fastutil/objects/Object2IntMap.class",
		"it/unimi/dsi/fastutil/objects/ObjectList.class",
		"it/unimi/dsi/fastutil/objects/AbstractObjectList.class",
		"it/unimi/dsi/fastutil/objects/ObjectCollection.class",
		"it/unimi/dsi/fastutil/objects/AbstractObjectListIterator.class",
		"it/unimi/dsi/fastutil/objects/ObjectArrayList.class",
		"it/unimi/dsi/fastutil/objects/AbstractObject2IntFunction.class",
		"it/unimi/dsi/fastutil/objects/Object2IntFunction.class",
		"it/unimi/dsi/fastutil/objects/ObjectIterators.class",
		"it/unimi/dsi/fastutil/objects/AbstractObject2IntMap.class",
		"it/unimi/dsi/fastutil/objects/ObjectArrays.class",
		"it/unimi/dsi/fastutil/objects/AbstractObjectBidirectionalIterator.class",
		"it/unimi/dsi/fastutil/objects/ObjectIterator.class",
		"it/unimi/dsi/fastutil/objects/ObjectArraySet.class",
		"it/unimi/dsi/fastutil/objects/Object2IntOpenHashMap.class",
		"it/unimi/dsi/fastutil/objects/ObjectListIterator.class",
		"it/unimi/dsi/fastutil/objects/ObjectIterable.class",
		"it/unimi/dsi/fastutil/objects/AbstractObjectSet.class",
		"it/unimi/dsi/fastutil/objects/AbstractObjectIterator.class",
		"it/unimi/dsi/fastutil/BidirectionalIterator.class",
		"it/unimi/dsi/fastutil/shorts/ShortIterator.class",
		"it/unimi/dsi/fastutil/ints/IntArrayList.class",
		"it/unimi/dsi/fastutil/ints/AbstractIntIterator.class",
		"it/unimi/dsi/fastutil/ints/IntListIterator.class",
		"it/unimi/dsi/fastutil/ints/AbstractIntCollection.class",
		"it/unimi/dsi/fastutil/ints/AbstractInt2IntMap.class",
		"it/unimi/dsi/fastutil/ints/AbstractInt2ObjectFunction.class",
		"it/unimi/dsi/fastutil/ints/AbstractIntBidirectionalIterator.class",
		"it/unimi/dsi/fastutil/ints/Int2IntFunction.class",
		"it/unimi/dsi/fastutil/ints/AbstractIntSet.class",
		"it/unimi/dsi/fastutil/ints/Int2IntOpenHashMap.class",
		"it/unimi/dsi/fastutil/ints/IntArraySet.class",
		"it/unimi/dsi/fastutil/ints/IntList.class",
		"it/unimi/dsi/fastutil/ints/IntStack.class",
		"it/unimi/dsi/fastutil/ints/IntIterator.class",
		"it/unimi/dsi/fastutil/ints/IntBidirectionalIterator.class",
		"it/unimi/dsi/fastutil/ints/IntIterable.class",
		"it/unimi/dsi/fastutil/ints/Int2ObjectFunction.class",
		"it/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap.class",
		"it/unimi/dsi/fastutil/ints/IntArrays.class",
		"it/unimi/dsi/fastutil/ints/IntCollection.class",
		"it/unimi/dsi/fastutil/ints/AbstractInt2IntFunction.class",
		"it/unimi/dsi/fastutil/ints/Int2ObjectMap.class",
		"it/unimi/dsi/fastutil/ints/Int2IntMap.class",
		"it/unimi/dsi/fastutil/ints/IntIterators.class",
		"it/unimi/dsi/fastutil/ints/IntComparator.class",
		"it/unimi/dsi/fastutil/ints/AbstractIntListIterator.class",
		"it/unimi/dsi/fastutil/ints/AbstractIntList.class",
		"it/unimi/dsi/fastutil/ints/AbstractInt2ObjectMap.class",
		"it/unimi/dsi/fastutil/ints/IntSet.class",
	]
}

repositories {
	mavenCentral()
}

configurations {
	partial
}

dependencies {
	compile("org.apache.commons:commons-collections4:4.1")
	partial("it.unimi.dsi:fastutil:8.1.1") {
		transitive = false
	}
	testCompile("junit:junit:4.12")
}

compileJava {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

compileTestJava {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

jar {
	manifest {
		attributes (
			"Implementation-Version": version,
			"Implementation-Title": rootProject.name,
		)
	}
	provided3rdPartyClasses.each {
		final clsName = it
		from(configurations.partial.collect { zipTree(it) }) {
			include "**" + clsName
		}
	}
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = "javadoc"
	from javadoc.destinationDir
}

artifacts {
	archives jar
	archives sourcesJar
	archives javadocJar
}

test {
	jvmArgs "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"
	jvmArgs "-XX:MaxDirectMemorySize=1g"
	jvmArgs "-XX:+HeapDumpOnOutOfMemoryError"
	maxHeapSize "1g"
	systemProperty "com.sun.management.jmxremote", "true"
	systemProperty "com.sun.management.jmxremote.port", "9010"
	systemProperty "com.sun.management.jmxremote.rmi.port", "9010"
	systemProperty "com.sun.management.jmxremote.local.only", "false"
	systemProperty "com.sun.management.jmxremote.authenticate", "false"
	systemProperty "com.sun.management.jmxremote.ssl", "false"
	testLogging {
		events "passed", "skipped", "failed", "standardOut"
		showExceptions = true
		showStandardStreams = true
	}
}

signing {
	required {
		gradle.taskGraph.hasTask("uploadArchives")
	}
	sign configurations.archives
}

// see http://central.sonatype.org/pages/gradle.html for details
uploadArchives {

	def ossrhUsername = project.hasProperty("ossrhUsername") ?
		project.property("ossrhUsername") : null
	def ossrhPassword = project.hasProperty("ossrhPassword") ?
		project.property("ossrhPassword") : null

	repositories {
		mavenDeployer {
			beforeDeployment {
				MavenDeployment deployment -> signing.signPom(deployment)
			}

			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			pom {

				name = rootProject.name
				groupId = rootProject.group

				project {
					description = rootProject.description

					url "https://github.com/akurilov/java-commons"

					scm {
						connection "https://github.com/akurilov/java-commons.git"
						developerConnection "https://github.com/akurilov/java-commons.git"
						url "https://github.com/akurilov/java-commons.git"
					}

					licenses {
						license {
							name "Apache License 2.0"
							url "https://github.com/akurilov/java-commons/blob/master/LICENSE"
						}
					}

					developers {
						developer {
							id "akurilov"
							name "Andrey Kurilov"
							email "akurilov123@gmail.com"
						}
					}
				}
			}
		}
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = "4.6"
}

task printVersion {
	group = "versioning"
	description = "Prints version."
	doLast { logger.quiet "Java-commons version: $version" }
}
